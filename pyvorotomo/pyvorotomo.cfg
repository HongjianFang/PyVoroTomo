[algorithm]
# Number of iterations to perform.
niter = 2   
# Number of Voronoi cells distributed using k-medians clustering.
kvoronoi = 16
# Number of Voronoi cells distributed randomly.
nvoronoi = 16
# Horizontal-to-vertical ratio for stretching Voronoi cells
hvr = 1
# Number of realizations per iteration.
nreal = 4
# The number of data points to use in the k-medians clustering
# of Voronoi cells. Using the entire set of raypaths can cause this
# to be too slow.
k_medians_npts = 32
# Minimum number of arrivals per event.
min_narrival = 8
# Number of events to sample per realization.
nevent = 32
# Number of arrivals to sample per realization. First "nevent" events
# are sampled, then "narrival" arrivals are sampled from these events.
narrival = 32
# Multiplicative factor for outlier removal using Tukey fences
# Values 1.5 and 3 indicate "outliers" and "far-off values", respectively.
outlier_removal_factor = 1.5
# The following parameters (atol, btol, maxiter, conlim, and damp) are
# passed through directly to scipy.sparse.linalg.lsmr().
atol = 1e-3
btol = 1e-4
maxiter = 100
conlim = 50
damp = 1.0

[model]
# Velocity model loadable using pykonal.fields.read_hdf()
initial_pwave_path = test_data/initial_pwave_model.h5  
initial_swave_path = test_data/initial_swave_model.h5  

[relocate]
# Set the "method" parameter here to "linear" for linearized relocation
# or "de" for differential evolution relocation. The parameters
# controlling the chosen relocation method are set in correspdonging
# sections below.
method = DE

[de_relocation]
# This section is only needed if the "method" parameter of the
# "relocate" section is set to "DE".
depth_min = -2
dlat = 0.1
dlon = 0.1
ddepth = 10
dtime = 5

[linearized_relocation]
# This section is only needed if the "method" parameter of the
# "relocate" section is set to "linear".
# 
# All parameters in this section (atol, btol, maxiter, conlim, and damp)
# are passed through directly to scipy.sparse.linalg.lsmr().
atol = 1e-3
btol = 1e-4
conlim = 50
damp = 0.1
maxiter = 10
